{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Bhavika Gianey\\\\Desktop\\\\homePage\\\\Frontend\\\\src\\\\components\\\\Timeline.js\";\nimport React, { useEffect, useState } from 'react'; // import '../../App.css';\n\nimport './Timeline.css';\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport 'react-vertical-timeline-component/style.min.css';\nimport { ReactComponent as Trophy } from \"@svgr/webpack?-svgo,+titleProp,+ref!./Trophy.svg\";\nimport Aos from 'aos';\nimport 'aos/dist/aos.css';\n\nfunction Achievements() {\n  const [achievements, setAchievements] = useState([{\n    name: '',\n    month: '',\n    year: '',\n    description: ''\n  }]);\n  useEffect(() => {\n    fetch('http://localhost:8080/achievements').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setAchievements(jsonRes));\n  }, []);\n  useEffect(() => {\n    Aos.init({\n      duration: 1200\n    });\n  }, []);\n  let achievementicon = {\n    background: \"gold\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"achievement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"ah\",\n    \"data-aos\": \"flip-right\",\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      color: \"black\",\n      textDecoration: \"underline\",\n      letterSpacing: \"2px\" // fontFamily:\"quicksand\"\n\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Achievements\"), /*#__PURE__*/React.createElement(VerticalTimeline, {\n    animate: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-aos\": \"flip-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, achievements.map(achievement => /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n    key: achievement.name,\n    date: achievement.month + ' / ' + achievement.year,\n    dateClassName: \"date\",\n    iconStyle: achievementicon,\n    icon: /*#__PURE__*/React.createElement(Trophy, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"vertical-timeline-element-title ah1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, achievement.name), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vertical-timeline-element-subtitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, achievement.description)))))));\n}\n\nexport default Achievements; // export  function Events() {\n//   const [events, setEvents] = useState([{\n//     name: '', \n//     date: '',\n//     month: '',\n//     year: '',\n//     day: '',\n//     time: '',\n//     venue: ''\n//   }])\n//   useEffect(() => {\n//     fetch('http://localhost:8080/events')\n//     .then(res => {\n//       if(res.ok) {\n//         return res.json()\n//       }\n//     }).then(jsonRes => setEvents(jsonRes))\n//   })\n//   return (\n//     <div className=\"container\">\n//       {events.map(event => (\n//       <div>\n//         <h1>{event.name}</h1>\n//       </div>\n//       ))}\n//     </div>\n//   )\n// }","map":{"version":3,"sources":["C:/Users/Bhavika Gianey/Desktop/homePage/Frontend/src/components/Timeline.js"],"names":["React","useEffect","useState","VerticalTimeline","VerticalTimelineElement","Aos","Achievements","achievements","setAchievements","name","month","year","description","fetch","then","res","ok","json","jsonRes","init","duration","achievementicon","background","display","justifyContent","color","textDecoration","letterSpacing","map","achievement"],"mappings":"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","sourcesContent":["\r\nimport React, {useEffect, useState} from 'react';\r\n// import '../../App.css';\r\nimport './Timeline.css'\r\nimport {VerticalTimeline, VerticalTimelineElement} from 'react-vertical-timeline-component'\r\nimport 'react-vertical-timeline-component/style.min.css'\r\nimport {ReactComponent as Trophy} from './Trophy.svg'\r\nimport Aos from 'aos'\r\nimport 'aos/dist/aos.css'\r\n\r\nfunction Achievements() {\r\n\r\n  const [achievements, setAchievements] = useState([{\r\n    \r\n    name: '', \r\n    month: '',\r\n    year: '', \r\n    description: ''\r\n    \r\n\r\n\r\n  }])\r\n\r\n  \r\n\r\n  useEffect(() => {\r\n    fetch('http://localhost:8080/achievements')\r\n    .then(res => {\r\n      if(res.ok) {\r\n        return res.json()\r\n      }\r\n    }).then(jsonRes => setAchievements(jsonRes))\r\n  },[])\r\n\r\n  useEffect(()=>{\r\n    Aos.init({duration:1200})\r\n  },[])\r\n\r\n  let achievementicon={background: \"gold\"}\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n    <div className='achievement'>\r\n      <h2 className='ah' data-aos='flip-right'\r\n      style={{\r\n        display:\"flex\",\r\n        justifyContent:\"center\",\r\n        color:\"black\",\r\n        textDecoration:\"underline\",\r\n        letterSpacing:\"2px\"\r\n        // fontFamily:\"quicksand\"\r\n      }}>Achievements</h2>\r\n      <VerticalTimeline\r\n      animate={false}\r\n      >\r\n      <div data-aos='flip-left'>\r\n      {achievements.map(achievement => (\r\n          <VerticalTimelineElement\r\n          key={achievement.name}\r\n          date={achievement.month+' / '+achievement.year}\r\n          dateClassName=\"date\"\r\n          iconStyle={achievementicon}\r\n          icon={<Trophy />}\r\n          >\r\n            <h3  className='vertical-timeline-element-title ah1'>\r\n              {achievement.name}\r\n            </h3>\r\n            <p className='vertical-timeline-element-subtitle'>\r\n              {achievement.description}\r\n            </p>\r\n        </VerticalTimelineElement>\r\n      ))}\r\n      </div>\r\n      </VerticalTimeline>\r\n    </div>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Achievements\r\n\r\n// export  function Events() {\r\n\r\n//   const [events, setEvents] = useState([{\r\n    \r\n//     name: '', \r\n//     date: '',\r\n//     month: '',\r\n//     year: '',\r\n//     day: '',\r\n//     time: '',\r\n//     venue: ''\r\n//   }])\r\n\r\n//   useEffect(() => {\r\n//     fetch('http://localhost:8080/events')\r\n//     .then(res => {\r\n//       if(res.ok) {\r\n//         return res.json()\r\n//       }\r\n//     }).then(jsonRes => setEvents(jsonRes))\r\n//   })\r\n\r\n//   return (\r\n//     <div className=\"container\">\r\n//       {events.map(event => (\r\n//       <div>\r\n//         <h1>{event.name}</h1>\r\n        \r\n//       </div>\r\n//       ))}\r\n//     </div>\r\n//   )\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}