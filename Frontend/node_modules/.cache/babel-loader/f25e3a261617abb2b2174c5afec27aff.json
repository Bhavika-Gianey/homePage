{"ast":null,"code":"var _jsxFileName = \"/home/rohan/Desktop/amc-website/Frontend/src/components/Timeline.js\";\nimport React, { useEffect, useState } from 'react'; // import '../../App.css';\n\nexport function Achievements() {\n  const [achievements, setAchievements] = useState([{\n    name: '',\n    month: '',\n    year: '',\n    description: ''\n  }]);\n  useEffect(() => {\n    fetch('http://localhost:8080/achievements').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setAchievements(jsonRes));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, achievements.map(achievement => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, achievement.name))));\n}\nexport function Events() {\n  const [events, setEvents] = useState([{\n    name: '',\n    date: '',\n    month: '',\n    year: '',\n    day: '',\n    time: '',\n    venue: ''\n  }]);\n  useEffect(() => {\n    fetch('http://localhost:8080/events').then(res => {\n      if (res.ok) {\n        return res.json();\n      }\n    }).then(jsonRes => setEvents(jsonRes));\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, events.map(event => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, event.name))));\n}","map":{"version":3,"sources":["/home/rohan/Desktop/amc-website/Frontend/src/components/Timeline.js"],"names":["React","useEffect","useState","Achievements","achievements","setAchievements","name","month","year","description","fetch","then","res","ok","json","jsonRes","map","achievement","Events","events","setEvents","date","day","time","venue","event"],"mappings":";AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC,C,CACA;;AAEA,OAAQ,SAASC,YAAT,GAAwB;AAE9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCH,QAAQ,CAAC,CAAC;AAEhDI,IAAAA,IAAI,EAAE,EAF0C;AAGhDC,IAAAA,KAAK,EAAE,EAHyC;AAIhDC,IAAAA,IAAI,EAAE,EAJ0C;AAKhDC,IAAAA,WAAW,EAAE;AALmC,GAAD,CAAD,CAAhD;AAcAR,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KALD,EAKGH,IALH,CAKQI,OAAO,IAAIV,eAAe,CAACU,OAAD,CALlC;AAMD,GAPQ,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,YAAY,CAACY,GAAb,CAAiBC,WAAW,iBAC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,WAAW,CAACX,IAAjB,CADF,CADC,CADH,CADF;AAUD;AAGD,OAAQ,SAASY,MAAT,GAAkB;AAExB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAC;AAEpCI,IAAAA,IAAI,EAAE,EAF8B;AAGpCe,IAAAA,IAAI,EAAE,EAH8B;AAIpCd,IAAAA,KAAK,EAAE,EAJ6B;AAKpCC,IAAAA,IAAI,EAAE,EAL8B;AAMpCc,IAAAA,GAAG,EAAE,EAN+B;AAOpCC,IAAAA,IAAI,EAAE,EAP8B;AAQpCC,IAAAA,KAAK,EAAE;AAR6B,GAAD,CAAD,CAApC;AAWAvB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAI;AACX,UAAGA,GAAG,CAACC,EAAP,EAAW;AACT,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;AACF,KALD,EAKGH,IALH,CAKQI,OAAO,IAAIK,SAAS,CAACL,OAAD,CAL5B;AAMD,GAPQ,CAAT;AASA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,MAAM,CAACH,GAAP,CAAWS,KAAK,iBACjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACnB,IAAX,CADF,CADC,CADH,CADF;AAUD","sourcesContent":["\nimport React, {useEffect, useState} from 'react';\n// import '../../App.css';\n\nexport  function Achievements() {\n\n  const [achievements, setAchievements] = useState([{\n    \n    name: '', \n    month: '',\n    year: '', \n    description: ''\n    \n\n\n  }])\n\n\n  \n\n  useEffect(() => {\n    fetch('http://localhost:8080/achievements')\n    .then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setAchievements(jsonRes))\n  })\n\n  return (\n    <div className=\"container\">\n      {achievements.map(achievement => (\n      <div>\n        <h1>{achievement.name}</h1>\n        {/* whatever accordingly */}\n      </div>\n      ))}\n    </div>\n  )\n}\n\n\nexport  function Events() {\n\n  const [events, setEvents] = useState([{\n    \n    name: '', \n    date: '',\n    month: '',\n    year: '',\n    day: '',\n    time: '',\n    venue: ''\n  }])\n\n  useEffect(() => {\n    fetch('http://localhost:8080/events')\n    .then(res => {\n      if(res.ok) {\n        return res.json()\n      }\n    }).then(jsonRes => setEvents(jsonRes))\n  })\n\n  return (\n    <div className=\"container\">\n      {events.map(event => (\n      <div>\n        <h1>{event.name}</h1>\n        \n      </div>\n      ))}\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}